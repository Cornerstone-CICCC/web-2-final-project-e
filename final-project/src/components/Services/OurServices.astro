---
import Button from "../Button/Button.astro";
import Service1 from "../../assets/images/services_1.jpg";
import Service2 from "../../assets/images/services_2.jpg";
import Service3 from "../../assets/images/services_3.jpg";
import Service4 from "../../assets/images/services_4.jpg";
import Service5 from "../../assets/images/services_5.jpg";
import Service6 from "../../assets/images/services_6.jpg";

const SERVICES_LIST = [
  { title: "Engine services", image: Service1 },
  { title: "Transmission services", image: Service2 },
  { title: "Brake services", image: Service3 },
  { title: "Suspension services", image: Service4 },
  { title: "Electrical services", image: Service5 },
  { title: "Exhaust services", image: Service6 },
];
---

<section class="services">
  <div class="container services__container">
    <header class="services__text">
      <h2>Our Services</h2>
      <p class="text-medium-normal">
        Lorem ipsum dolor sit amet, consectetur adipiscing elit.
      </p>
    </header>

    <ul class="services__list" id="services-list">
      {
        SERVICES_LIST.map((service) => (
          <li
            class="services__item"
            style={{ backgroundImage: `url(${service.image.src})` }}>
            <div class="services__overlay" />
            <h5>{service.title}</h5>
          </li>
        ))
      }
    </ul>

    <div class="services__button">
      <Button id="services-view-btn" variant="line" isFullWidth={true}
        >View more</Button
      >
    </div>
  </div>
</section>

<style>
  .services {
    padding: 112px 0;
    background-color: var(--color-kuno-greywhite);
  }

  .services__container {
    display: flex;
    flex-direction: column;
  }

  .services__text {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    gap: 24px;
  }

  .services__list {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 80px 32px;
    margin-top: 80px;
  }

  .services__item {
    position: relative;
    height: 300px;
    display: flex;
    align-items: flex-end;
    padding: 24px 16px;
    border-radius: 5px;
    overflow: hidden;
    color: white;
    background-size: cover;
    background-position: center;
  }

  .services__overlay {
    position: absolute;
    inset: 0;
    background-color: rgba(0, 0, 0, 0.4);
    z-index: 1;
  }

  .services__item h5 {
    position: relative;
    z-index: 2;
    margin: 0;
  }

  .services__button {
    display: none;
  }

  @media (max-width: 768px) {
    .services {
      padding: 48px 0;
    }

    .services__text {
      align-items: flex-start;
      text-align: left;
    }

    .services__text h2 {
      font-size: var(--font-size-h4);
    }

    .services__list {
      grid-template-columns: 1fr;
      gap: 32px;
      margin-top: 48px;
    }

    .services__button {
      display: flex;
      width: 100%;
      margin-top: 48px;
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const list = document.getElementById("services-list");
    const button = document.getElementById("services-view-btn");
    if (!list || !button) return;

    const items = Array.from(list.children) as HTMLElement[];
    let visibleCount = 3;
    let expanded = false;

    const updateVisibility = () => {
      const isMobile = window.innerWidth <= 768;

      if (!isMobile) {
        items.forEach((item) => (item.style.display = "flex"));
        button.style.display = "none";
        return;
      }

      if (expanded) {
        items.forEach((item) => (item.style.display = "flex"));
        button.textContent = "View less";
      } else {
        items.forEach((item, index) => {
          item.style.display = index < visibleCount ? "flex" : "none";
        });
        button.textContent = "View more";
      }
    };

    expanded = false;
    visibleCount = 3;
    updateVisibility();

    button.addEventListener("click", () => {
      const totalItems = items.length;
      if (!expanded) {
        visibleCount += 3;
        if (visibleCount >= totalItems) {
          expanded = true;
        }
      } else {
        visibleCount = 3;
        expanded = false;
      }
      updateVisibility();
    });

    window.addEventListener("resize", () => {
      if (window.innerWidth > 768) {
        expanded = false;
        visibleCount = items.length;
      } else {
        visibleCount = expanded ? items.length : 3;
      }
      updateVisibility();
    });
  });
</script>
